#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <behaviors/hold-tap.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&nice_view_spi { cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; };

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        ctrl_arrow_left: ctrl_arrow_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&hm LEFT_CONTROL LEFT_ARROW>, <&macro_press>;
            label = "CTRL_ARROW_LEFT";
        };

        ctrl_arrow_right: ctrl_arrow_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&hm LEFT_CONTROL RIGHT_ARROW>, <&macro_press>;
            label = "CTRL_ARROW_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESC         &kp N1  &kp N2   &kp N3  &kp N4     &kp N5                                             &kp N6           &kp N7  &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB         &kp Q   &lt 7 W  &kp E   &kp R      &kp T                                              &kp Y            &kp U   &kp I      &kp O    &kp P     &kp BACKSLASH
&kp CAPS        &kp A   &kp S    &kp D   &kp F      &kp G                                              &kp H            &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X    &kp C   &kp V      &kp B             &kp LEFT_ALT      &kp RIGHT_ALT  &kp N            &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&none           &trans  &trans   &trans  &kp SPACE  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp ENTER      &lt 2 BACKSPACE                              &trans    &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans    &trans    &trans  &trans     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans                          &trans  &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                  &trans          &trans     &trans                &trans                 &trans        &trans
&trans  &trans      &trans        &trans        &trans        &trans                        &kp AMPERSAND   &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &trans
&trans  &trans      &trans        &trans        &trans        &trans                        &kp MINUS       &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans  &trans      &trans        &trans        &trans        &trans        &trans  &trans  &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT        &trans
&trans  &trans      &trans        &trans        &trans        &trans        &trans  &trans  &trans                                                                  &trans        &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans         &trans     &trans  &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans         &trans     &trans  &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_UP    &mkp LCLK  &mo 5   &mkp RCLK  &mkp MCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp PAGE_DOWN  &trans     &trans  &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                       &trans     &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        window_switch {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans            &trans  &trans  &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans            &trans  &trans  &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &ctrl_arrow_left  &trans  &trans  &ctrl_arrow_right  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                               &trans  &trans
            >;
        };
    };
};
